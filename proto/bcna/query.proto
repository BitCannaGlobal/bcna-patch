syntax = "proto3";
package bitcannaglobal.bcna.bcna;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bcna/params.proto";
import "bcna/bitcannaid.proto";
import "bcna/supplychain.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/BitCannaGlobal/bcna/x/bcna/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/BitCannaGlobal/bcna/bcna/params";
  }
  // Queries a Bitcannaid by id.
	rpc Bitcannaid(QueryGetBitcannaidRequest) returns (QueryGetBitcannaidResponse) {
		option (google.api.http).get = "/BitCannaGlobal/bcna/bcna/bitcannaid/{id}";
	}

	// Queries a list of Bitcannaid items.
	rpc BitcannaidAll(QueryAllBitcannaidRequest) returns (QueryAllBitcannaidResponse) {
		option (google.api.http).get = "/BitCannaGlobal/bcna/bcna/bitcannaid";
	}

// Queries a Supplychain by id.
	rpc Supplychain(QueryGetSupplychainRequest) returns (QueryGetSupplychainResponse) {
		option (google.api.http).get = "/BitCannaGlobal/bcna/bcna/supplychain/{id}";
	}

	// Queries a list of Supplychain items.
	rpc SupplychainAll(QueryAllSupplychainRequest) returns (QueryAllSupplychainResponse) {
		option (google.api.http).get = "/BitCannaGlobal/bcna/bcna/supplychain";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetBitcannaidRequest {
	uint64 id = 1;
}

message QueryGetBitcannaidResponse {
	Bitcannaid Bitcannaid = 1 [(gogoproto.nullable) = false];
}

message QueryAllBitcannaidRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBitcannaidResponse {
	repeated Bitcannaid Bitcannaid = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSupplychainRequest {
	uint64 id = 1;
}

message QueryGetSupplychainResponse {
	Supplychain Supplychain = 1 [(gogoproto.nullable) = false];
}

message QueryAllSupplychainRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSupplychainResponse {
	repeated Supplychain Supplychain = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
